// source: spire/api/agent/delegatedidentity.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var spire_api_types_selector_pb = require('../../../spire/api/types/selector_pb.js');
goog.object.extend(proto, spire_api_types_selector_pb);
var spire_api_types_x509svid_pb = require('../../../spire/api/types/x509svid_pb.js');
goog.object.extend(proto, spire_api_types_x509svid_pb);
var spire_api_types_jwtsvid_pb = require('../../../spire/api/types/jwtsvid_pb.js');
goog.object.extend(proto, spire_api_types_jwtsvid_pb);
goog.exportSymbol('proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest', null, global);
goog.exportSymbol('proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse', null, global);
goog.exportSymbol('proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest', null, global);
goog.exportSymbol('proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse', null, global);
goog.exportSymbol('proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest', null, global);
goog.exportSymbol('proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse', null, global);
goog.exportSymbol('proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest', null, global);
goog.exportSymbol('proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse', null, global);
goog.exportSymbol('proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.displayName = 'proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.repeatedFields_, null);
};
goog.inherits(proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.displayName = 'proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.repeatedFields_, null);
};
goog.inherits(proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.displayName = 'proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest.displayName = 'proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.displayName = 'proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.repeatedFields_, null);
};
goog.inherits(proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.displayName = 'proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.repeatedFields_, null);
};
goog.inherits(proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.displayName = 'proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest.displayName = 'proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.displayName = 'proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.prototype.toObject = function(opt_includeInstance) {
  return proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    x509Svid: (f = msg.getX509Svid()) && spire_api_types_x509svid_pb.X509SVID.toObject(includeInstance, f),
    x509SvidKey: msg.getX509SvidKey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey}
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey;
  return proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey}
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new spire_api_types_x509svid_pb.X509SVID;
      reader.readMessage(value,spire_api_types_x509svid_pb.X509SVID.deserializeBinaryFromReader);
      msg.setX509Svid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setX509SvidKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX509Svid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      spire_api_types_x509svid_pb.X509SVID.serializeBinaryToWriter
    );
  }
  f = message.getX509SvidKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional spire.api.types.X509SVID x509_svid = 1;
 * @return {?proto.spire.api.types.X509SVID}
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.prototype.getX509Svid = function() {
  return /** @type{?proto.spire.api.types.X509SVID} */ (
    jspb.Message.getWrapperField(this, spire_api_types_x509svid_pb.X509SVID, 1));
};


/**
 * @param {?proto.spire.api.types.X509SVID|undefined} value
 * @return {!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey} returns this
*/
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.prototype.setX509Svid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.prototype.clearX509Svid = function() {
  return this.setX509Svid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.prototype.hasX509Svid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes x509_svid_key = 2;
 * @return {!(string|Uint8Array)}
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.prototype.getX509SvidKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes x509_svid_key = 2;
 * This is a type-conversion wrapper around `getX509SvidKey()`
 * @return {string}
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.prototype.getX509SvidKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getX509SvidKey()));
};


/**
 * optional bytes x509_svid_key = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getX509SvidKey()`
 * @return {!Uint8Array}
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.prototype.getX509SvidKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getX509SvidKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.prototype.setX509SvidKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    selectorsList: jspb.Message.toObjectList(msg.getSelectorsList(),
    spire_api_types_selector_pb.Selector.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest;
  return proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new spire_api_types_selector_pb.Selector;
      reader.readMessage(value,spire_api_types_selector_pb.Selector.deserializeBinaryFromReader);
      msg.addSelectors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelectorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      spire_api_types_selector_pb.Selector.serializeBinaryToWriter
    );
  }
};


/**
 * repeated spire.api.types.Selector selectors = 1;
 * @return {!Array<!proto.spire.api.types.Selector>}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.prototype.getSelectorsList = function() {
  return /** @type{!Array<!proto.spire.api.types.Selector>} */ (
    jspb.Message.getRepeatedWrapperField(this, spire_api_types_selector_pb.Selector, 1));
};


/**
 * @param {!Array<!proto.spire.api.types.Selector>} value
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest} returns this
*/
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.prototype.setSelectorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.spire.api.types.Selector=} opt_value
 * @param {number=} opt_index
 * @return {!proto.spire.api.types.Selector}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.prototype.addSelectors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.spire.api.types.Selector, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.prototype.clearSelectorsList = function() {
  return this.setSelectorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    x509SvidsList: jspb.Message.toObjectList(msg.getX509SvidsList(),
    proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.toObject, includeInstance),
    federatesWithList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse;
  return proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey;
      reader.readMessage(value,proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.deserializeBinaryFromReader);
      msg.addX509Svids(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addFederatesWith(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX509SvidsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.serializeBinaryToWriter
    );
  }
  f = message.getFederatesWithList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated X509SVIDWithKey x509_svids = 1;
 * @return {!Array<!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey>}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.prototype.getX509SvidsList = function() {
  return /** @type{!Array<!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey, 1));
};


/**
 * @param {!Array<!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey>} value
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse} returns this
*/
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.prototype.setX509SvidsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.prototype.addX509Svids = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.spire.api.agent.delegatedidentity.v1.X509SVIDWithKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.prototype.clearX509SvidsList = function() {
  return this.setX509SvidsList([]);
};


/**
 * repeated string federates_with = 2;
 * @return {!Array<string>}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.prototype.getFederatesWithList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.prototype.setFederatesWithList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.prototype.addFederatesWith = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.prototype.clearFederatesWithList = function() {
  return this.setFederatesWithList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest;
  return proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    caCertificatesMap: (f = msg.getCaCertificatesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse;
  return proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getCaCertificatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCaCertificatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
};


/**
 * map<string, bytes> ca_certificates = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.prototype.getCaCertificatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.prototype.clearCaCertificatesMap = function() {
  this.getCaCertificatesMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    audienceList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    selectorsList: jspb.Message.toObjectList(msg.getSelectorsList(),
    spire_api_types_selector_pb.Selector.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest;
  return proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAudience(value);
      break;
    case 2:
      var value = new spire_api_types_selector_pb.Selector;
      reader.readMessage(value,spire_api_types_selector_pb.Selector.deserializeBinaryFromReader);
      msg.addSelectors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAudienceList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSelectorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      spire_api_types_selector_pb.Selector.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string audience = 1;
 * @return {!Array<string>}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.prototype.getAudienceList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.prototype.setAudienceList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.prototype.addAudience = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.prototype.clearAudienceList = function() {
  return this.setAudienceList([]);
};


/**
 * repeated spire.api.types.Selector selectors = 2;
 * @return {!Array<!proto.spire.api.types.Selector>}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.prototype.getSelectorsList = function() {
  return /** @type{!Array<!proto.spire.api.types.Selector>} */ (
    jspb.Message.getRepeatedWrapperField(this, spire_api_types_selector_pb.Selector, 2));
};


/**
 * @param {!Array<!proto.spire.api.types.Selector>} value
 * @return {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest} returns this
*/
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.prototype.setSelectorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.spire.api.types.Selector=} opt_value
 * @param {number=} opt_index
 * @return {!proto.spire.api.types.Selector}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.prototype.addSelectors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.spire.api.types.Selector, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.prototype.clearSelectorsList = function() {
  return this.setSelectorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    svidsList: jspb.Message.toObjectList(msg.getSvidsList(),
    spire_api_types_jwtsvid_pb.JWTSVID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse;
  return proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new spire_api_types_jwtsvid_pb.JWTSVID;
      reader.readMessage(value,spire_api_types_jwtsvid_pb.JWTSVID.deserializeBinaryFromReader);
      msg.addSvids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSvidsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      spire_api_types_jwtsvid_pb.JWTSVID.serializeBinaryToWriter
    );
  }
};


/**
 * repeated spire.api.types.JWTSVID svids = 1;
 * @return {!Array<!proto.spire.api.types.JWTSVID>}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.prototype.getSvidsList = function() {
  return /** @type{!Array<!proto.spire.api.types.JWTSVID>} */ (
    jspb.Message.getRepeatedWrapperField(this, spire_api_types_jwtsvid_pb.JWTSVID, 1));
};


/**
 * @param {!Array<!proto.spire.api.types.JWTSVID>} value
 * @return {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse} returns this
*/
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.prototype.setSvidsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.spire.api.types.JWTSVID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.spire.api.types.JWTSVID}
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.prototype.addSvids = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.spire.api.types.JWTSVID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.prototype.clearSvidsList = function() {
  return this.setSvidsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest;
  return proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bundlesMap: (f = msg.getBundlesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse;
  return proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getBundlesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBundlesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
};


/**
 * map<string, bytes> bundles = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.prototype.getBundlesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse} returns this
 */
proto.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.prototype.clearBundlesMap = function() {
  this.getBundlesMap().clear();
  return this;};


goog.object.extend(exports, proto.spire.api.agent.delegatedidentity.v1);
