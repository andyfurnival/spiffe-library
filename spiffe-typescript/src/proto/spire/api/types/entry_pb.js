// source: spire/api/types/entry.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var spire_api_types_selector_pb = require('../../../spire/api/types/selector_pb.js');
goog.object.extend(proto, spire_api_types_selector_pb);
var spire_api_types_spiffeid_pb = require('../../../spire/api/types/spiffeid_pb.js');
goog.object.extend(proto, spire_api_types_spiffeid_pb);
goog.exportSymbol('proto.spire.api.types.Entry', null, global);
goog.exportSymbol('proto.spire.api.types.EntryMask', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spire.api.types.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.spire.api.types.Entry.repeatedFields_, null);
};
goog.inherits(proto.spire.api.types.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spire.api.types.Entry.displayName = 'proto.spire.api.types.Entry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.spire.api.types.EntryMask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.spire.api.types.EntryMask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.spire.api.types.EntryMask.displayName = 'proto.spire.api.types.EntryMask';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.spire.api.types.Entry.repeatedFields_ = [4,6,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spire.api.types.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.spire.api.types.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spire.api.types.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.types.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    spiffeId: (f = msg.getSpiffeId()) && spire_api_types_spiffeid_pb.SPIFFEID.toObject(includeInstance, f),
    parentId: (f = msg.getParentId()) && spire_api_types_spiffeid_pb.SPIFFEID.toObject(includeInstance, f),
    selectorsList: jspb.Message.toObjectList(msg.getSelectorsList(),
    spire_api_types_selector_pb.Selector.toObject, includeInstance),
    x509SvidTtl: jspb.Message.getFieldWithDefault(msg, 5, 0),
    federatesWithList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    admin: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    downstream: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 9, 0),
    dnsNamesList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    revisionNumber: jspb.Message.getFieldWithDefault(msg, 11, 0),
    storeSvid: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    jwtSvidTtl: jspb.Message.getFieldWithDefault(msg, 13, 0),
    hint: jspb.Message.getFieldWithDefault(msg, 14, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spire.api.types.Entry}
 */
proto.spire.api.types.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spire.api.types.Entry;
  return proto.spire.api.types.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spire.api.types.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spire.api.types.Entry}
 */
proto.spire.api.types.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new spire_api_types_spiffeid_pb.SPIFFEID;
      reader.readMessage(value,spire_api_types_spiffeid_pb.SPIFFEID.deserializeBinaryFromReader);
      msg.setSpiffeId(value);
      break;
    case 3:
      var value = new spire_api_types_spiffeid_pb.SPIFFEID;
      reader.readMessage(value,spire_api_types_spiffeid_pb.SPIFFEID.deserializeBinaryFromReader);
      msg.setParentId(value);
      break;
    case 4:
      var value = new spire_api_types_selector_pb.Selector;
      reader.readMessage(value,spire_api_types_selector_pb.Selector.deserializeBinaryFromReader);
      msg.addSelectors(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX509SvidTtl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addFederatesWith(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdmin(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDownstream(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpiresAt(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addDnsNames(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRevisionNumber(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStoreSvid(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setJwtSvidTtl(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setHint(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spire.api.types.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spire.api.types.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spire.api.types.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.types.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpiffeId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      spire_api_types_spiffeid_pb.SPIFFEID.serializeBinaryToWriter
    );
  }
  f = message.getParentId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      spire_api_types_spiffeid_pb.SPIFFEID.serializeBinaryToWriter
    );
  }
  f = message.getSelectorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      spire_api_types_selector_pb.Selector.serializeBinaryToWriter
    );
  }
  f = message.getX509SvidTtl();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getFederatesWithList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getAdmin();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getDownstream();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getDnsNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getRevisionNumber();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getStoreSvid();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getJwtSvidTtl();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getHint();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.spire.api.types.Entry.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SPIFFEID spiffe_id = 2;
 * @return {?proto.spire.api.types.SPIFFEID}
 */
proto.spire.api.types.Entry.prototype.getSpiffeId = function() {
  return /** @type{?proto.spire.api.types.SPIFFEID} */ (
    jspb.Message.getWrapperField(this, spire_api_types_spiffeid_pb.SPIFFEID, 2));
};


/**
 * @param {?proto.spire.api.types.SPIFFEID|undefined} value
 * @return {!proto.spire.api.types.Entry} returns this
*/
proto.spire.api.types.Entry.prototype.setSpiffeId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.clearSpiffeId = function() {
  return this.setSpiffeId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.spire.api.types.Entry.prototype.hasSpiffeId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SPIFFEID parent_id = 3;
 * @return {?proto.spire.api.types.SPIFFEID}
 */
proto.spire.api.types.Entry.prototype.getParentId = function() {
  return /** @type{?proto.spire.api.types.SPIFFEID} */ (
    jspb.Message.getWrapperField(this, spire_api_types_spiffeid_pb.SPIFFEID, 3));
};


/**
 * @param {?proto.spire.api.types.SPIFFEID|undefined} value
 * @return {!proto.spire.api.types.Entry} returns this
*/
proto.spire.api.types.Entry.prototype.setParentId = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.clearParentId = function() {
  return this.setParentId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.spire.api.types.Entry.prototype.hasParentId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Selector selectors = 4;
 * @return {!Array<!proto.spire.api.types.Selector>}
 */
proto.spire.api.types.Entry.prototype.getSelectorsList = function() {
  return /** @type{!Array<!proto.spire.api.types.Selector>} */ (
    jspb.Message.getRepeatedWrapperField(this, spire_api_types_selector_pb.Selector, 4));
};


/**
 * @param {!Array<!proto.spire.api.types.Selector>} value
 * @return {!proto.spire.api.types.Entry} returns this
*/
proto.spire.api.types.Entry.prototype.setSelectorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.spire.api.types.Selector=} opt_value
 * @param {number=} opt_index
 * @return {!proto.spire.api.types.Selector}
 */
proto.spire.api.types.Entry.prototype.addSelectors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.spire.api.types.Selector, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.clearSelectorsList = function() {
  return this.setSelectorsList([]);
};


/**
 * optional int32 x509_svid_ttl = 5;
 * @return {number}
 */
proto.spire.api.types.Entry.prototype.getX509SvidTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.setX509SvidTtl = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated string federates_with = 6;
 * @return {!Array<string>}
 */
proto.spire.api.types.Entry.prototype.getFederatesWithList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.setFederatesWithList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.addFederatesWith = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.clearFederatesWithList = function() {
  return this.setFederatesWithList([]);
};


/**
 * optional bool admin = 7;
 * @return {boolean}
 */
proto.spire.api.types.Entry.prototype.getAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool downstream = 8;
 * @return {boolean}
 */
proto.spire.api.types.Entry.prototype.getDownstream = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.setDownstream = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional int64 expires_at = 9;
 * @return {number}
 */
proto.spire.api.types.Entry.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated string dns_names = 10;
 * @return {!Array<string>}
 */
proto.spire.api.types.Entry.prototype.getDnsNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.setDnsNamesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.addDnsNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.clearDnsNamesList = function() {
  return this.setDnsNamesList([]);
};


/**
 * optional int64 revision_number = 11;
 * @return {number}
 */
proto.spire.api.types.Entry.prototype.getRevisionNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.setRevisionNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bool store_svid = 12;
 * @return {boolean}
 */
proto.spire.api.types.Entry.prototype.getStoreSvid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.setStoreSvid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional int32 jwt_svid_ttl = 13;
 * @return {number}
 */
proto.spire.api.types.Entry.prototype.getJwtSvidTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.setJwtSvidTtl = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string hint = 14;
 * @return {string}
 */
proto.spire.api.types.Entry.prototype.getHint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.setHint = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional int64 created_at = 15;
 * @return {number}
 */
proto.spire.api.types.Entry.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.spire.api.types.Entry} returns this
 */
proto.spire.api.types.Entry.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.spire.api.types.EntryMask.prototype.toObject = function(opt_includeInstance) {
  return proto.spire.api.types.EntryMask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.spire.api.types.EntryMask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.types.EntryMask.toObject = function(includeInstance, msg) {
  var f, obj = {
    spiffeId: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    parentId: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    selectors: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    x509SvidTtl: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    federatesWith: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    admin: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    downstream: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    expiresAt: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    dnsNames: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    revisionNumber: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    storeSvid: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    jwtSvidTtl: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    hint: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    createdAt: jspb.Message.getBooleanFieldWithDefault(msg, 15, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.spire.api.types.EntryMask}
 */
proto.spire.api.types.EntryMask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.spire.api.types.EntryMask;
  return proto.spire.api.types.EntryMask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.spire.api.types.EntryMask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.spire.api.types.EntryMask}
 */
proto.spire.api.types.EntryMask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSpiffeId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setParentId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSelectors(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setX509SvidTtl(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFederatesWith(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdmin(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDownstream(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpiresAt(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDnsNames(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRevisionNumber(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStoreSvid(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJwtSvidTtl(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHint(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.spire.api.types.EntryMask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.spire.api.types.EntryMask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.spire.api.types.EntryMask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.spire.api.types.EntryMask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpiffeId();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getParentId();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSelectors();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getX509SvidTtl();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getFederatesWith();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAdmin();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getDownstream();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getExpiresAt();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getDnsNames();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getRevisionNumber();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getStoreSvid();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getJwtSvidTtl();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getHint();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getCreatedAt();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
};


/**
 * optional bool spiffe_id = 2;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getSpiffeId = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setSpiffeId = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool parent_id = 3;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getParentId = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setParentId = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool selectors = 4;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getSelectors = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setSelectors = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool x509_svid_ttl = 5;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getX509SvidTtl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setX509SvidTtl = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool federates_with = 6;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getFederatesWith = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setFederatesWith = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool admin = 7;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool downstream = 8;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getDownstream = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setDownstream = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool expires_at = 9;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getExpiresAt = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool dns_names = 10;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getDnsNames = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setDnsNames = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool revision_number = 11;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getRevisionNumber = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setRevisionNumber = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool store_svid = 12;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getStoreSvid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setStoreSvid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool jwt_svid_ttl = 13;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getJwtSvidTtl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setJwtSvidTtl = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool hint = 14;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getHint = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setHint = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool created_at = 15;
 * @return {boolean}
 */
proto.spire.api.types.EntryMask.prototype.getCreatedAt = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.spire.api.types.EntryMask} returns this
 */
proto.spire.api.types.EntryMask.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


goog.object.extend(exports, proto.spire.api.types);
